version: '3.8'
services:
  flask:
      build: api
      container_name: api
      restart: unless-stopped
      ports:
        - 5000:5000
      environment:
        - DEBUG=0
      networks:
        flask_network:
          ipv4_address: 10.0.99.10
      volumes:
        - ../api:/api
  vue:
    build: frontend
    container_name: frontend
    restart: unless-stopped
    ports:
      - 8000:8000
    networks:
      flask_network:
          ipv4_address: 10.0.99.11
  nginx:
      build: nginx
      restart: unless-stopped
      container_name: proxy
      ports:
        - 80:80
      networks:
        flask_network:
          ipv4_address: 10.0.99.12
  postgres:
      image: postgres:13
      container_name: db
      restart: unless-stopped
      ports:
        - 5433:5432
      env_file:
        - docker.env
      environment:
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        - POSTGRES_DB=${POSTGRES_DB}
      volumes:
        - postgres_data:/var/lib/postgresql/data
      networks:
        flask_network:
          ipv4_address: 10.0.99.13
networks:
    flask_network:
        ipam:
            config:
                - subnet: 10.0.99.0/24
        external: false

volumes:
  postgres_data:
